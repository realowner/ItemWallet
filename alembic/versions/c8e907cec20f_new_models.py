"""new models

Revision ID: c8e907cec20f
Revises: e6e992bfde2b
Create Date: 2025-05-26 18:06:20.486812

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c8e907cec20f'
down_revision: Union[str, None] = 'e6e992bfde2b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('game_accounts',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('game_accounts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_game_accounts_title'), ['title'], unique=True)

    op.create_table('item_floats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=20), nullable=False),
    sa.Column('abbr', sa.String(length=2), nullable=False),
    sa.Column('min_value', sa.Float(), nullable=False),
    sa.Column('max_value', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('item_floats', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_item_floats_abbr'), ['abbr'], unique=True)
        batch_op.create_index(batch_op.f('ix_item_floats_title'), ['title'], unique=True)

    op.create_table('markets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_markets_title'), ['title'], unique=True)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('games_title_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_games_title'), ['title'], unique=True)

    with op.batch_alter_table('item_types', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('item_types_title_key'), type_='unique')
        batch_op.create_index(batch_op.f('ix_item_types_title'), ['title'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('item_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_item_types_title'))
        batch_op.create_unique_constraint(batch_op.f('item_types_title_key'), ['title'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_games_title'))
        batch_op.create_unique_constraint(batch_op.f('games_title_key'), ['title'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('markets', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_markets_title'))

    op.drop_table('markets')
    with op.batch_alter_table('item_floats', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_item_floats_title'))
        batch_op.drop_index(batch_op.f('ix_item_floats_abbr'))

    op.drop_table('item_floats')
    with op.batch_alter_table('game_accounts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_game_accounts_title'))

    op.drop_table('game_accounts')
    # ### end Alembic commands ###
